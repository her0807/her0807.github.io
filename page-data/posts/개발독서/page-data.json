{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/개발독서","result":{"pageContext":{"currentCategory":"개발독서","categories":["All","etc","spring","독서","java","보안","architecture","cs","개발독서","db"],"edges":[{"node":{"id":"4e3535f2-4b48-5790-bde3-4f86100f2dec","excerpt":"학습 동기 정렬 알고리즘에 대해서 공부하다가 Arrays.sort 내부 구현체는 Comparable 을 상속받아 구현되어 있다는 내용을 알게 되었습니다.  Comparable 의 특징과 동작원리를 알게되면 더욱 효과적으로 사용할 수 있을 것 같아서 읽게 되었어요. Comparable 자바에서 제공되는 정렬이 가능한 클래스들은 모두 Comparable 인터페이스를 구현하고 있으며, 정렬 시에 이에 맞게 정렬이 수행됩니다. Integer 와 Double 클래스는 숫자 오름차순으로 정렬되어 있어요. String은  A-Z, 1-9 같이 사전순으로 정렬되어 있어요. 유일무이한 메서드 compareTo 해당 인터페이스에는 메서드가 compareTo 딱 하나뿐이에요. 이 compareTo 를 재정의해서 정렬 조건을 사용할 의도에 맞춰서 변경할 수 있어요! 비교 값이 0 이면 같다. 비교 값이 1 (양수) 이면 크다. 비교 값이 -1 (음수) 이면 작다.  정렬이고, 비교군을 반대로 한다면 내…","fields":{"slug":"/java6/"},"frontmatter":{"categories":"cs 개발독서","title":"[Effective Java -14장] Comparable 을 구현할지 고려해라","date":"December 16, 2022"}},"next":{"fields":{"slug":"/java3/"}},"previous":{"fields":{"slug":"/os/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}